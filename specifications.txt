localization
    localized text content can be found at src/main/resources/public/i18n
    every .html page has a localization .json with matching name
        .json structure
            {
                "title": "Title of the page",
                "staticText": {
                    "id-of-the-html-tag": [
                        {
                            "key": "attribute"
                            "message": "Value of the attribute"
                        }
                    ]
                },
                "additionalContent": {
                    "id": "Additional contents are used by JS for several case, eg. notifications, or not static content's labels"
                }
            }
    additional localization files:
        message_codes.json: stores notification/error messages
        categories.json: stores names of factory/shop categories
        description.json: localization used for ship's / item's description
        items.json: contains names and descriptions of all items can be used in game
            items' data is stored at src/main/resources/public/gamedata/items

    Only Hungarian localization is present yet.
    To determinate the localization, application uses the browser's language.
    FE tries to load localization from the server with this language, and if localization not found, it falls back to Hungarian.

notifications
    success notification: green background
    error notification: red background
    notifications appear on the top left corner with a roll-in effect.
    notification disappears after 10 seconds with a roll-out effect.
    notification disappears immediately when user clicks on it.

index
    registration
        validation rules:
            username
                at least 3 characters long -> USERNAME_TOO_SHORT
                maximum 30 characters long -> USERNAME_TOO_LONG
                must not exist -> USERNAME_ALREADY_EXISTS
            passwords
                at least 6 characters long -> PASSWORD_TOO_SHORT
                maximum 30 characters long -> PASSWORD_TOO_LONG
                password and confirm password must be equal -> BAD_CONFIRM_PASSWORD
            email
                must be valid -> INVALID_EMAIL
                must not exist -> EMAIL_ALREADY_EXISTS

        validation results must be appear approx. 1 sec after the last character is entered
        form cannot be sent before validation results appear

        if any of the input fields is invalid
            registration button is disabled
            registration form cannot be sent (neither by clicking button, neither by pressing enter)
            'error X' appears next to the invalid field, with an error specific title
        if all input fields are valid
            registration button is enabled
            registration form can be sent (by clicking button or pressing enter)

        send registration form
            user must be created, and logged in automatically, and redirected to characterselect page
            -> REGISTRATION_SUCCESSFUL success notification appears

    login
        sending the form with empty username and/or password
            EMPTY_CREDENTIALS error notification appears
        sending the form with bad credentials
            BAD_CREDENTIALS error notification appears
        sending the form with correct credentials
            login successfully, and redirect to characterselect page

characterselect
    new account has zero characters.
    one account can create unlimited amount of characters.

    create character
        character name validation rules:
            at least 3 characters long -> CHARACTER_NAME_TOO_SHORT
            maximum 30 characters long -> CHARACTER_NAME_TOO_LONG
            must not exist -> CHARACTER_NAME_ALREADY_EXISTS

        validation result must be appear approx. 1 sec after the last character is entered
        form cannot be sent before validation results appear

        if character name is invalid
            create character button is disabled
            form cannot be sent (neither by clicking button, neither by pressing enter)
            'error X' appears next to the invalid field, with an error specific title

        if character name is valid
            create character button is enabled
            registration form can be sent (by clicking button or pressing enter)

        send the form
            CHARACTER_CREATED success notification appears
            character appear in character list

    select character
        account's characters must be in abc order.
        account can be selected by clicking on its name('s table cell)
        when character is selected, the user is redirected the character's overview page

    delete character
        press 'Delete character' button
        -> additionalContent.confirm-character-deletion confirm dialog appears
            -> click 'no': character is not deleted
            -> click 'yes'
                CHARACTER_DELETED success notification appears
                character is removed from character list

    rename character
        press 'Rename character' button
        -> 'Rename character' modal appears
            modal can be closed by clicking on 'X' button at top right corner
        character name validation rules:
            at least 3 characters long -> CHARACTER_NAME_TOO_SHORT
            maximum 30 characters long -> CHARACTER_NAME_TOO_LONG
            must not exist -> CHARACTER_NAME_ALREADY_EXISTS

        validation result must be appear approx. 1 sec after the last character is entered
        form cannot be sent before validation results appear

        if character name is invalid
            rename character button is disabled
            form cannot be sent (neither by clicking button, neither by pressing enter)
            'error X' appears next to the invalid field, with an error specific title

        if character name is valid
            rename character button is enabled
            registration form can be sent (by clicking button or pressing enter)

        send the form
            CHARACTER_RENAMED success notification appears
            rename character modal is closed
            character appears with the new name in the character list

account
    Validation rules are the same as registration page
    If any form is sent with bad password, BAD_PASSWORD error notification should appear

    Change email
        EMAIL_CHANGE_SUCCESSFUL success notification appears

    Change username
        USERNAME_CHANGE_SUCCESSFUL success notification appears
        Cannot login with the old username
        Can login with the new username

    Change password
        PASSWORD_CHANGE_SUCCESSFUL success notification appears
        Cannot login with the old password
        Can login with the new password

    Delete account
        Confirm dialog appears with CONFIRM_ACCOUNT_DELETION message
        no/cancel -> Account is not deleted
        yes/ok -> ACCOUNT_DELETION_SUCCESSFUL success notification appears
               -> User is logged out
               -> Cannot log in again
        New user can be registered with the deleted character's username and email
        All user data is deleted from the database

overview
    Overview and all pages linked from here are protected with 'characterId'.
    This means you can open them only after a character is selected.
    Logging out or returning characterselect page resets the character selection.
    When a user tries to access a protected page without character

    'Community' button displays the summarized notifications of the user (received friend requests + incoming mails).
    White color if no notifications, red if there are some.

    Equipment table shows the current equipment of the ship.
    Items' title contains their description.

equipment
    Right side contains the character's equipment placed in storage.
        Grouped by category, ordered by category name.
        In category, the item's are also ordered by their name.
        The item's amount is in parenthesis after the name.
    Left side contains the character's equipped equipment, like on overview page.
    Unequipping an item:
        Click on the equipped item to unequip it.
        ITEM_UNEQUIPPED success notification appears
        Unequipped item added to storage.
            Increasing the existing item's amount, or create a new item (and category) if there is no item in storage with the same ID.
        Empty slot must appear on the ship where the item was unequipped from.
        If the unequipped item is a 'Connector', the ship's stats also have to change according to the unequipped item's type.
        If the unequipped item is an 'Extender', the ship's slots number must be decreased with the correct number.
            If there are less empty slots in the ship than the reduction, some equipped items should be unequipped too.
                (BE handles this unequipment, ship data is reloaded.)
    Equipping items:
        Drag and drop the item from the storage to one of the empty slots.
            Items can be dropped only to the corresponding slot.
            Corresponding slots' border is green.
        Equipped item must be removed from storage and appear in the ship.
            The item must disappear from storage if the amount is 0.
            The category must disappear from storage if no items in it.
        One of the ship's empty slot must be replaced with the new item, where the item was dropped.
        If the equipped item is a 'Connector', the ship's stats also have to change according to the unequipped item's type.
        If the equipped item is an 'Extender', the correct number of empty slots must appear for the given type.
        Only one extender can be equipped for each type.

factory
    column 1: displaying all materials the user have in abc order.
        If the user has no materials "No materials" label must be shown
    column 2: displaying category list.
        When user clicks on a category, the items belong to it must be shown in column 3.
    column 3: displaying items of the selected category.
        The cost of production must be displayed for each item.
            Cost of production = cost of one item * entered amount
            Color must be green if there is enough material / credit in storage, or red if not.
        The total production time must be displayed (production time of one item * entered amount)
        "Start production" button must not be enabled until all required materials are present in storage.
        Clicking on "Start production"
            PRODUCT_ADDED_TO_QUEUE success notification appears
            The entered amount of items are added to queue (in one block)
            The stored materials must be reduced by the used amount.
            Items of the selected category is reloaded.
    column 4: displaying queue
        First item of the queue is "In progress" state, all the others are waiting (It can take 10 seconds til the first item changes state)
        "In progress" item has a countdown timer and a progress bar.
        When the item is ready
            It must be removed from the queue
            The next item must be started
            If the item is material, the product must be added to stored materials

shop
    column 1: displaying category list.
        When user clicks on a category, the items belong to it must be shown in column 2.
    column 2: displaying items of selected category.
        "Add to cart" button must be disabled if user has no enough money left.
    column 3: displaying cart.
        Row 1: the character's current balance must be displayed.
        Row 2: the items the user added to cart
            Grouped by item
            Cancel button
                Amount in the cart reduced by 1
                If amount is 0, item must disappear
            "Buy" button at the end of the item list
        Row 3: Total cost of cart

    Pressing buy button
        Does nothing when cart is empty.
        Buys all the items in the cart
            Money is reduced by the total cost of the cart
            Cart is empty
            ITEMS_BOUGHT success notification appears

community
    Blocking characters
        Block character
            Search result should show characters with name containing the keyword, except user's own, and already blocked characters.
        Character should not send mail to blocked character (and vice versa)
            Blocked character should not appear in addressee search result
            Character should not reply to mail from blocked character (and vice versa)
        Character should not send friend request to blocked character (and vice versa)
            Blocked character should not appear in add friend search result
        Already sent friend request should be deleted when the friend and the character block each other.
        Friendship should be deleted when the friend and the character block each other.
        Blocked character can be unblocked only by the one who blocked him.
            After successful unblock, all the features should be enabled again for both sides.
    Friendship
        Sending friend request
            Search result should show characters with name containing the keyword, except
                - User's own characters
                - Blocked characters
                - Characters where friend request already exists
                - Friends
        Friend request can be cancelled by the sender, and accepted/declined by the receiver.
        Active friends should be highlighted (with green border), and should be placed on the top of the list.
        Friends can be deleted, and have a shortcut button for sending mails (when clicking on it, addressee field is filled automatically)
    Mails
        Sending mail
            Addressee search result should show characters with name containing the keyword, except user's own, and blocked characters.
            Validation rules:
                Subject must be filled (max 100 characters length)
                Message must be filled (max 4000 characters length)
                Valid addressee must be selected (addressee field is highlighted with green border)
            Successfully sent mails should be appear at "Sent mails" tab.
        Reading mail
            Unread mails should be highlighted with light green border.
            When user clicks on the mail header, mail body should appear, and mail should be marked as read.
            Mail read status can be set by clicking on "Mark as (un)read" buttons
        Deleting mails
            Mails can be deleted both by sender and addressee.
            The sides can delete mails individually (if sender deletes the mail, it still should be visible at addressee side, until he also deletes the mail)
        Archiving mail
            Archived mails should appear at "Archived mails" tab.
            Archived mails should not be deleted automatically, when they are expired.
            Archived mails can be restored.
                Restored mails should reappear at "Incoming mails" tab.
                Restored mails can be deleted automatically.
        Replying the mail
            Addressee can reply to an incoming mail.
            Sender should be set as addressee automatically.
            Subject should be the same with a "Re: " prefix.
        Bulk operations
            Bulk operations can be executed on the selected mails (tick the checkbox on the left side of the mail header)
            Operation can be selected from a dropdown menu
            There are different operations for each tab.
            The selected operation should be executed on the selected mails when clicking on "Execute bulk operation" button.
        Notifications
            Number of friend requests and number of unread mails should be displayed on the community page with red highlight.
            The summarized number of friend requests and number of unread mails should be displayed on overview page.
            These numbers should be updated in every 20 seconds automatically, or when user accepts/declines a friend request, or changes a mail's read state.

hangar
    Available game modes are shown on this page.
    Some game modes have additional properties, what can be set up by selecting it from a dropdown menu.
    Clicking on the tile of the selected game mode, the user should be redirected to a new lobby page, with the correct details.

Lobby
    Group members
        The current members of the group should be displayed in the middle part of the screen.
        There should be one and only one group owner, and some other group members.
        Total amount of group members should not exceed a certain number, depends on the game mode and details.
        Each member can set his ready state individually.
            Ready members are highlighted with green background.
        Group owner can start the match queueing only when all the members are marked as ready.
        Privileges of group owner:
            - Starting match queueing, when all the group members are ready
            - Set "Auto-fill" group (when there are less member in the group than the max group size)
            - Kick members from the group
            - Transfer ownership to an other group member
    Invite group members
        The right side of the screen is for the member invitation.
        Active friends, who are not in lobby should be appear here.
            The list can be refreshed by clicking the "Refresh" button.
        Members can search invitable characters by name.
            Search result should show ACTIVE characters with name containing the keyword, except
                - Characters already in lobby
                - Blocked characters
        When invitation is sent, a popup should appear at the bottom right of the invited character's screen.
            Invitation can be accepted/declined.
            Invited member should be redirected to the lobby, when he accepts the invitation.
        You can send only 1 invitation in 10 seconds for the same character.
        Invitations should disappear after a certain time automatically.
    Chatting
        On the left side members can send messages to each other.
        Messages sent by you should appear on the right side, messages send by the other group members should appear on the left side.
    Leaving the lobby
        Any member can leave the lobby by clicking "Leave lobby" button.
        If the owner leaves the lobby, ownership should be transferred to a random member.
        If a member logs out, he should leave the lobby automatically.
    Page access restrictions
        If a character is in a lobby, he can only access the lobby page.
            If he tries to reach any other pages, he should be redirected to lobby page.
        If a character is not in a lobby, he cannot reach the lobby page.
            If he tries to reach the lobby page, he should be redirected to overview page.
        If a character is in a lobby what already in queue, he can only access the lobbyQueue page. Or else he should be redirected to there.
        If a character is not in a lobby what already in queue, he cannot access the lobbyQueue page. Or else he should be redirected to lobby page / overview page.
        Notes:
            User can always access the index page.
            Request to characterSelect page